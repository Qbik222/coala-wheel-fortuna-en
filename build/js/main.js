"use strict";

document.addEventListener("DOMContentLoaded", function () {
  var days = document.querySelectorAll(".wheel__days-item");
  var popupDays = document.querySelectorAll(".popup__days-item");
  var popupDaysMob = document.querySelectorAll(".days__item");
  var currentDay = 5;
  function setDays(days, currentDay) {
    days.forEach(function (day, i) {
      ++i;
      day.classList.toggle("next", i > currentDay);
      day.classList.toggle("past", i < currentDay);
      day.classList.toggle("active", i === currentDay);
    });
  }
  function daysRemind(days, classAnim) {
    var delay = 900;
    days.forEach(function (day, i) {
      setTimeout(function () {
        day.classList.add(classAnim);
        setTimeout(function () {
          return day.classList.remove(classAnim);
        }, 1200);
      }, delay * i);
    });
  }

  // const randomInterval = Math.random() * (20000 - 10000) + 10000;
  var randomInterval = Math.random() * (6000 - 4000) + 4000;
  function addFireworks(containerSelector, numberOfFireworks) {
    // Створення нового блоку .fireworks-wrap
    var fireworksWrap = document.createElement('div');
    fireworksWrap.className = 'fireworks-wrap';

    // Додавання вказаної кількості .firework елементів до fireworksWrap
    for (var i = 0; i < numberOfFireworks; i++) {
      var firework = document.createElement('div');
      firework.className = 'firework';
      fireworksWrap.appendChild(firework);
    }

    // Знаходимо контейнер, в який хочемо додати fireworksWrap
    var container = document.querySelector(containerSelector);

    // Додаємо fireworksWrap до контейнера
    if (container) {
      container.appendChild(fireworksWrap);
    } else {
      console.error("\u041A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440 \u0437 \u0441\u0435\u043B\u0435\u043A\u0442\u043E\u0440\u043E\u043C \"".concat(containerSelector, "\" \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E."));
    }
  }
  function removeFireworks(containerSelector) {
    // Знаходимо контейнер
    var container = document.querySelector(containerSelector);

    // Якщо контейнер існує, знаходимо в ньому блок .fireworks-wrap і видаляємо його
    if (container) {
      var fireworksWrap = container.querySelector('.fireworks-wrap');
      if (fireworksWrap) {
        fireworksWrap.remove();
      } else {
        console.warn("\u0415\u043B\u0435\u043C\u0435\u043D\u0442 \u0437 \u043A\u043B\u0430\u0441\u043E\u043C \".fireworks-wrap\" \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E \u0432 \u043A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440\u0456 ".concat(containerSelector, "."));
      }
    } else {
      console.error("\u041A\u043E\u043D\u0442\u0435\u0439\u043D\u0435\u0440 \u0437 \u0441\u0435\u043B\u0435\u043A\u0442\u043E\u0440\u043E\u043C \"".concat(containerSelector, "\" \u043D\u0435 \u0437\u043D\u0430\u0439\u0434\u0435\u043D\u043E."));
    }
  }

  // Використання функції для видалення блоку
  //     removeFireworks('.container');

  // Використання функції для додавання блоку
  //

  function startRandomInterval() {
    var randomInterval = Math.random() * (20000 - 10000) + 10000; // Випадковий інтервал між 10 і 20 секундами
    daysRemind(days, "remind");
    daysRemind(popupDays, "remind");
    daysRemind(popupDaysMob, "remind");
    setTimeout(startRandomInterval, randomInterval);
  }
  startRandomInterval();
  daysRemind(days, "remind");
  setDays(days, currentDay);
  setDays(popupDays, currentDay);
  setDays(popupDaysMob, currentDay);
  // addAnimationClass()

  /// wheel logic
  var wheelSections = document.querySelector(".wheel__sections");
  var wheelWrap = document.querySelector(".wheel__wrap");
  var wheelArrow = document.querySelector(".wheel__arrow");
  var wheelBtn = document.querySelector(".wheel__btn");
  var spinBg = document.querySelector(".spin-bg");
  var salut = document.querySelector(".fireworks-wrap");
  var bubleBtn = document.querySelector(".wheel__days-icons");
  var wheelBuble = document.querySelector(".wheel__buble");
  var popupContainer = document.querySelector(".popups");
  var popup = document.querySelector(".popup");
  var popupCloseBtn = document.querySelector(".popup__close");
  bubleBtn.addEventListener("click", function (e) {
    wheelBuble.classList.toggle("_hidden");
    document.addEventListener("click", function (e) {
      if (e.target !== bubleBtn) wheelBuble.classList.add("_hidden");
    });
  });
  var prizes = ['iphone', 'ecoflow', 'merch', 'nothing', "bonuses"];
  function getRandomPrize(arr) {
    return arr[Math.floor(Math.random() * prizes.length)];
  }
  function showPopup(sections, wheel, showClass, currentDay, spinBg, closeBtn, popupContainer, popup) {
    // document.querySelector(".fav-page").classList.add("popupBg")
    popup.classList.add("".concat(showClass));
    popup.classList.contains('_nothing') === true ? null : addFireworks(".popups", 7);
    currentDay === 7 ? popup.classList.add("_done") : popup.classList.add("_incomplete");
    popupContainer.classList.add("_opacity", "_zIndex");
    document.body.style.overflow = "hidden";
    spinBg.classList.remove("showSpinBg");
    var pers = document.querySelectorAll(".popup__pers");
    var prize = document.querySelectorAll(".popup__prize");
    var buble = document.querySelectorAll(".popup__buble");
    var popupBody = document.querySelector(".popup__main");
    var popupTitle = document.querySelectorAll(".popup__title");
    var popupLeftArrow = document.querySelectorAll(".popup__decor-left");
    var popupRightArrow = document.querySelectorAll(".popup__decor-right");
    currentDay === 7 ? popupBody.classList.add("_done") : popup.classList.add("_incomplete");
    document.querySelector(".fav-page").classList.remove("bgScale");
    function addAnim(arr, classAnim) {
      arr.forEach(function (item) {
        return item.classList.add("".concat(classAnim));
      });
    }

    //popup animations
    popupBody.classList.add("popupMainAnim");
    setTimeout(function () {
      addAnim(pers, "popupPersAnim");
      addAnim(buble, "popupBubleAnim");
    }, 600);
    setTimeout(function () {
      return addAnim(prize, "popupPrizeAnim");
    }, 1200);
    setTimeout(function () {
      return popupTitle.forEach(function (item) {
        return item.classList.add("popupTitleAnim");
      });
    }, 1800);
    setTimeout(function () {
      return popupLeftArrow.forEach(function (item) {
        return item.classList.add("popupLeftArrAnim");
      });
    }, 2400);
    setTimeout(function () {
      return popupRightArrow.forEach(function (item) {
        return item.classList.add("popupRightArrAnim");
      });
    }, 2700);

    //popup animations

    closeBtn.addEventListener("click", function () {
      popup.classList.contains('_nothing') === true ? null : addFireworks(".wheel", 7);
      wheel.classList.add("_lock");
      wheel.classList.remove("wheelSizeIncrease");
      document.body.style.overflow = "auto";
      popupContainer.classList.remove("_opacity", "_zIndex");
      popup.classList.remove("".concat(showClass), '_done', '_incomplete');
      removeFireworks(".popups");
      console.log(popup.classList.contains('_nothing'));

      // popupContainer.classList.contains('_nothing') === true ?  null :
    });
  }

  function spinWheel(position, animation, sections, btn, wheel, arrow, prize, spinBg, salut) {
    sections.addEventListener("animationend", function () {
      sections.style.transform = "translate(-50%, -50%) rotate(".concat(position, "deg)");
      // prize === "nothing" ? null : salut.classList.add("_opacity", "_zIndex")
      console.log(prize);
    }, {
      once: true
    });
    sections.classList.add("".concat(animation));
    arrow.style.opacity = "0";
    wheel.classList.add("wheelSizeIncrease");
    document.querySelector(".fav-page").classList.add("bgScale");
    spinBg.classList.add("showSpinBg");
    btn.style.pointerEvents = "none";
  }
  function firstSpin(sections, btn, wheel, arrow, prize, spinBg, salut) {
    btn.addEventListener("click", function () {
      if (prize === "iphone") {
        sections.addEventListener("animationend", function () {
          return showPopup(sections, wheel, "_iphone", currentDay, spinBg, popupCloseBtn, popupContainer, popup);
        });
        spinWheel(1800, "iphonePrize", sections, btn, wheel, arrow, prize, spinBg, salut);
      }
      if (prize === "ecoflow") {
        sections.addEventListener("animationend", function () {
          return showPopup(sections, wheel, "_ecoflow", currentDay, spinBg, popupCloseBtn, popupContainer, popup);
        });
        spinWheel(1665, "ecoflowPrize", sections, btn, wheel, arrow, prize, spinBg, salut);
      }
      if (prize === "merch") {
        sections.addEventListener("animationend", function () {
          return showPopup(sections, wheel, "_merch", currentDay, spinBg, popupCloseBtn, popupContainer, popup);
        });
        spinWheel(1711, "merchPrize", sections, btn, wheel, arrow, prize, spinBg, salut);
      }
      if (prize === "nothing") {
        sections.addEventListener("animationend", function () {
          return showPopup(sections, wheel, "_nothing", currentDay, spinBg, popupCloseBtn, popupContainer, popup);
        });
        spinWheel(1755, "nothingPrize", sections, btn, wheel, arrow, prize, spinBg, salut);
      }
      if (prize === "bonuses") {
        sections.addEventListener("animationend", function () {
          return showPopup(sections, wheel, "_bonus", currentDay, spinBg, popupCloseBtn, popupContainer, popup);
        });
        spinWheel(1935, "bonusesPrize", sections, btn, wheel, arrow, prize, spinBg, salut);
      }
    });
  }
  firstSpin(wheelSections, wheelBtn, wheelWrap, wheelArrow, getRandomPrize(prizes), spinBg, salut);

  //// accordion

  var accordionHeaders = document.querySelectorAll('.accordion__header');
  accordionHeaders.forEach(function (header) {
    header.addEventListener('click', function () {
      var content = header.nextElementSibling;
      document.querySelectorAll('.accordion__content').forEach(function (item) {
        if (item !== content) {
          item.style.display = 'none';
          item.previousElementSibling.classList.remove('open');
        }
      });
      if (content.style.display === 'block') {
        content.style.display = 'none';
        header.classList.remove('open');
      } else {
        content.style.display = 'block';
        header.classList.add('open');
      }
    });
  });

  //// for test

  var btnsWrap = document.querySelector('.btns-wrap');
  var buttons = btnsWrap.querySelectorAll('button');
  var dropIphoneButton = document.querySelector('.drop-iphone');
  var dropEcoflowButton = document.querySelector('.drop-ecoflow');
  var dropNothingButton = document.querySelector('.drop-nothing');
  var dropMerchButton = document.querySelector('.drop-merch');
  var dropBonusButton = document.querySelector('.drop-bonus');
  var dropDone = document.querySelector('.drop-done');
  var dropLock = document.querySelector('.drop-lock');
  // const dropIncomplete = document.querySelector('.drop-incomplete');
  var dropMenu = document.querySelector('.drop-menu');
  dropMenu.addEventListener("click", function () {
    return btnsWrap.classList.toggle("_hidden");
  });
  firstSpin(wheelSections, dropIphoneButton, wheelWrap, wheelArrow, "iphone", spinBg, salut);
  firstSpin(wheelSections, dropEcoflowButton, wheelWrap, wheelArrow, "ecoflow", spinBg, salut);
  firstSpin(wheelSections, dropNothingButton, wheelWrap, wheelArrow, "nothing", spinBg, salut);
  firstSpin(wheelSections, dropMerchButton, wheelWrap, wheelArrow, "merch", spinBg, salut);
  firstSpin(wheelSections, dropBonusButton, wheelWrap, wheelArrow, "bonuses", spinBg, salut);
  buttons.forEach(function (item) {
    item.addEventListener("click", function () {
      wheelSections.style.animationDuration = "0.1s";
      wheelSections.addEventListener("animationend", function () {
        wheelSections.style.animationDuration = "8s";
      });
    });
  });
  dropLock.addEventListener("click", function () {
    return wheelWrap.classList.toggle("_lock");
  });
  dropDone.addEventListener("click", function () {
    return currentDay = 7;
  });
  // localStorage.setItem(currentDay, currentDay)
  // dropIncomplete.addEventListener("click", () => currentDay = 3)
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
